쉽게 말해서 Robust I/O(강인한 입출력) 는 네트워크 통신이나 파일 I/O에서 발생할 수 있는 문제들을 방지하는 안전한 방식입니다. CSAPP(Computer Systems: A Programmer's Perspective) 책에서 소개된 기법으로, 주로 네트워크 프로그래밍에서 안정적인 데이터 송수신을 위해 사용됩니다.

✅ Robust I/O가 필요한 이유
일반적인 read()나 write() 함수는 네트워크 환경에서 예상대로 동작하지 않는 경우가 많습니다. 예를 들어:

짧은 읽기(short read): 한 번에 모든 데이터를 읽지 못할 수도 있습니다.
짧은 쓰기(short write): 데이터를 보냈는데 일부만 전송될 수도 있습니다.
인터럽트(Interrupted system call): 네트워크 환경에서는 시스템 콜이 중단될 가능성이 있습니다.
Robust I/O는 이러한 문제를 해결하기 위해 반복적으로 호출하면서 데이터를 끝까지 전송하거나 받을 때까지 기다리는 방식을 적용합니다.


일종의 안전 중개 장치이다. 보내고 받는 과정에 대해 보장하고 보증서주는 장치라고 생각하면 됨.

디스크럽터 쉽게 설명
    * 일종의 배정받은 번호
    * 여기 카페가서 커피 주문하면 번호표 받는 느낌
    * 1015번한테 커피를 준다라는건 giveCoffee(1015); 이런 느낌이 된다.
